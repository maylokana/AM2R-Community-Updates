<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSolid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// i'm so sorry for your frames
switch (solid_style){
    default:
        draw_self();
    break;
    case 1:
        draw_sprite(sSlope1,0,x,y);
    break;
    case 2:
        draw_sprite(sSlope2,0,x,y);
    break;
    case 3: case 25:
        draw_sprite(sBlockStep,0,x,y);
        if (solid_style == 25) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 4: case 26:
        draw_sprite(sBlockShoot,0,x,y);
        if (solid_style == 26) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 5: case 27:
        draw_sprite(sBlockBomb,0,x,y);
        if (solid_style == 27) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 6: case 28:
        draw_sprite(sBlockMissile,0,x,y);
        if (solid_style == 28) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 7: case 29:
        draw_sprite(sBlockSMissile,0,x,y);
        if (solid_style == 29) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 8: case 30:
        draw_sprite(sBlockPBomb,0,x,y);
        if (solid_style == 30) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 9: case 31:
        draw_sprite(sBlockScrew,0,x,y);
        if (solid_style == 31) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 10: case 32:
        draw_sprite(sBlockSpeed,0,x,y);
        if (solid_style == 32) then draw_sprite(sStaticLabel,0,x,y);
    break;
    case 11:
        draw_sprite(sEditorStart,0,x+8,y+16);
    break;
    case 12:
        draw_sprite(sEDTrigger,0,x,y);
    break;
    case 13:
        draw_sprite(sEDSpike,0,x,y);
    break;
    // items
    case 14:
        draw_sprite(sItemSpiderBall,0,x+0,y+16);
    break;
    case 15:
        draw_sprite(sItemJumpBall,0,x+0,y+16);
    break;
    case 16:
        draw_sprite(sItemHijump,0,x+0,y+16);
    break;
    case 17:
        draw_sprite(sItemSpaceJump,0,x+0,y+16);
    break;
    case 18:
        draw_sprite(sItemBomb,0,x+0,y+16);
    break;
    case 19:
        draw_sprite(sItemMissile,0,x+0,y+16);
    break;
    case 20:
        draw_sprite(sItemSuperMissile,0,x+0,y+16);
    break;
    case 21:
        draw_sprite(sItemPowerBomb,0,x+0,y+16);
    break;
    case 22:
        draw_sprite(sItemScrewAttack,0,x+0,y+16);
    break;
    case 23:
        draw_sprite(sItemSpeedBooster,0,x+0,y+16);
    break;
    case 34:
        draw_sprite(sItemMorphBall,0,x+0,y+16);
    break;
    case 35:
        draw_sprite(sItemPowergrip,0,x+0,y+16);
    break;
    case 36:
        draw_sprite(sItemEnergyTank,0,x+0,y+16);
    break;
    case 37:
        draw_sprite(sItemChargeBeam,0,x+0,y+16);
    break;
    case 38:
        draw_sprite(sItemWaveBeam,0,x+0,y+16);
    break;
    case 39:
        draw_sprite(sItemSpazerBeam,0,x+0,y+16);
    break;
    // fields
    case 24:
        draw_sprite(sHealField,0,x+0,y+0);
    break;
    case 33:
        draw_sprite(sAmmoField,0,x+0,y+0);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
